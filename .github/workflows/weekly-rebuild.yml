name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  schedule:
    # Run every Monday at 2:00 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:  # Allow manual triggering

jobs:
  keepalive:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Keep workflow alive
        run: |
          echo "Last automated build: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > .github/last-build.txt
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .github/last-build.txt
          git diff --staged --quiet || git commit -m "Automated keepalive - $(date -u '+%Y-%m-%d')"
          git push
  
  rebuild:
    runs-on: ubuntu-latest
    needs: keepalive
    
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,prefix={{branch}}-
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max